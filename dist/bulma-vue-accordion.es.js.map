{"version":3,"file":"bulma-vue-accordion.es.js","sources":["../src/bus.js","../plugin-vue:export-helper","../src/Accordions.vue","../src/Accordion.vue","../src/index.js"],"sourcesContent":["import mitt from 'mitt';\n\nconst emitter = mitt();\nexport default emitter;\n","\nexport default (sfc, props) => {\n  for (const [key, val] of props) {\n    sfc[key] = val\n  }\n  return sfc\n}\n","<template>\n    <section class=\"bv-accordions\"><slot></slot></section>\n</template>\n\n<script>\nimport {onBeforeUnmount, onMounted, provide} from 'vue';\n\nimport eventBus from './bus.js';\n\nexport default {\n    name: 'bv-accordions',\n    props: {\n        single: {\n            default: true,\n            type: Boolean,\n        },\n    },\n    setup(props, {slots}) {\n        const children = [];\n        const registeredAccordions = slots.default()[0].children.length;\n\n        const dispatchCloseEvent = (accordionId) => {\n            let accordionsToClose = children.reduce((carry, child) => {\n                if (child.id === accordionId) return carry;\n                child.state = false;\n                return [child.id, ...carry];\n            }, []);\n\n            eventBus.emit('accordion.close', accordionsToClose);\n        };\n\n        const closeAccordions = ({accordionId, state}) => {\n            if (!props.single || !state) return;\n            if (!children.find((child) => child.id === accordionId)) return;\n\n            dispatchCloseEvent(accordionId);\n        };\n\n        const closeOtherAccordions = () => {\n            if (!props.single) return;\n            let openAccordion = null;\n\n            for (const child of children) {\n                openAccordion ||= child.state ? child.id : null;\n                if (openAccordion) break;\n            }\n\n            if (!openAccordion) return;\n            dispatchCloseEvent(openAccordion);\n        };\n\n        const registerChild = (child) => {\n            children.push(child);\n            if (children.length !== registeredAccordions) return;\n            closeOtherAccordions();\n        };\n\n        provide('registerChild', registerChild);\n\n        onMounted(() => {\n            eventBus.on('accordion.toggle', closeAccordions);\n        });\n\n        onBeforeUnmount(() => {\n            eventBus.off('accordion.toggle');\n        });\n    },\n};\n</script>\n","<template>\n    <section\n        class=\"bv-accordion\"\n        :data-accordion-id=\"accordionId\"\n        :class=\"{'bv-accordion--without-toggle': !togglable, 'is-open': state}\"\n    >\n        <header class=\"bv-accordion__header\">\n            <div v-if=\"togglable\" class=\"bv-accordion__toggle\" @click=\"toggle\">\n                <template v-if=\"usesFontAwesome\">\n                    <span class=\"icon\"><i class=\"fas fal\" :class=\"[state ? 'fa-minus' : 'fa-plus']\"></i></span>\n                </template>\n                <template v-else>{{ state ? '-' : '+' }}</template>\n            </div>\n            <div class=\"bv-accordion__title\" @click=\"toggle\"><slot name=\"title\"></slot></div>\n            <div class=\"bv-accordion__actions\"><slot name=\"actions\"></slot></div>\n        </header>\n        <transition name=\"bv-accordion-toggle\" @enter=\"enter\" @after-enter=\"afterEnter\" @leave=\"leave\">\n            <article v-show=\"state\" class=\"bv-accordion__content content\">\n                <slot name=\"content\" v-bind:state=\"state\"></slot>\n            </article>\n        </transition>\n    </section>\n</template>\n\n<script>\nimport {ref, nextTick, onBeforeUnmount, watch, inject} from 'vue';\nimport {nanoid} from 'nanoid';\n\nimport eventBus from './bus.js';\n\nexport default {\n    name: 'bv-accordion',\n    props: {\n        usesFontAwesome: {\n            type: Boolean,\n            default: true,\n        },\n        togglable: {\n            type: Boolean,\n            default: true,\n        },\n        open: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    emits: ['toggle'],\n    setup(props, {emit}) {\n        const state = ref(props.open);\n        const accordionId = nanoid();\n        const registerChild = inject('registerChild', null);\n\n        const toggle = async (newState) => {\n            if (!props.togglable && newState === undefined) return;\n            await nextTick();\n\n            state.value = newState !== undefined ? newState : !state.value;\n            emit('toggle', state.value);\n            eventBus.emit('accordion.toggle', {accordionId, state: state.value});\n        };\n\n        const enter = async (element) => {\n            const width = getComputedStyle(element).width;\n\n            element.style.width = width;\n            element.style.position = 'absolute';\n            element.style.visibility = 'hidden';\n            element.style.height = 'auto';\n\n            const height = getComputedStyle(element).height;\n\n            element.style.width = null;\n            element.style.position = null;\n            element.style.visibility = null;\n            element.style.height = 0;\n\n            getComputedStyle(element).height;\n            await nextTick();\n            element.style.height = height;\n        };\n\n        const afterEnter = (element) => {\n            element.style.height = 'auto';\n        };\n\n        const leave = async (element) => {\n            const height = getComputedStyle(element).height;\n            element.style.height = height;\n\n            getComputedStyle(element).height;\n            await nextTick();\n            element.style.height = 0;\n        };\n\n        const close = (accordionsToClose) => {\n            if (!state.value || !props.togglable || !accordionsToClose.includes(accordionId)) return;\n            state.value = false;\n        };\n\n        eventBus.on('accordion.close', close);\n\n        if (registerChild) {\n            registerChild({id: accordionId, state: state.value});\n        }\n\n        onBeforeUnmount(() => eventBus.off('accordion.close'));\n\n        watch(\n            () => props.open,\n            (value) => {\n                if (value === state.value) return;\n                toggle();\n            }\n        );\n\n        return {accordionId, state, toggle, enter, afterEnter, leave};\n    },\n};\n</script>\n","import Accordions from './Accordions.vue';\nimport Accordion from './Accordion.vue';\nimport './assets/style.scss';\n\nexport default (app) => {\n    app.component('Accordion', Accordion);\n    app.component('Accordions', Accordions);\n};\n"],"names":["eventBus"],"mappings":"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"}