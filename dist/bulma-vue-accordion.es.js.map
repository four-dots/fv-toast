{"version":3,"file":"bulma-vue-accordion.es.js","sources":["../src/bus.js","../src/Accordions.vue","../src/Accordion.vue","../src/index.js"],"sourcesContent":["import mitt from 'mitt';\n\nconst emitter = mitt();\nexport default emitter;\n","<template>\n    <section class=\"bv-accordions\"><slot></slot></section>\n</template>\n\n<script>\nimport {onBeforeUnmount, onMounted, provide} from 'vue';\n\nimport eventBus from './bus.js';\n\nexport default {\n    name: 'bv-accordions',\n    props: {\n        single: {\n            default: true,\n            type: Boolean,\n        },\n    },\n    setup(props, {slots}) {\n        const children = [];\n        const registeredAccordions = slots.default()[0].children.length;\n\n        const dispatchCloseEvent = (accordionId) => {\n            let accordionsToClose = children.reduce((carry, child) => {\n                if (child.id === accordionId) return carry;\n                child.state = false;\n                return [child.id, ...carry];\n            }, []);\n\n            eventBus.emit('accordion.close', accordionsToClose);\n        };\n\n        const closeAccordions = ({accordionId, state}) => {\n            if (!props.single || !state) return;\n            if (!children.find((child) => child.id === accordionId)) return;\n\n            dispatchCloseEvent(accordionId);\n        };\n\n        const closeOtherAccordions = () => {\n            if (!props.single) return;\n            let openAccordion = null;\n\n            for (const child of children) {\n                openAccordion ||= child.state ? child.id : null;\n                if (openAccordion) break;\n            }\n\n            if (!openAccordion) return;\n            dispatchCloseEvent(openAccordion);\n        };\n\n        const registerChild = (child) => {\n            children.push(child);\n            if (children.length !== registeredAccordions) return;\n            closeOtherAccordions();\n        };\n\n        provide('registerChild', registerChild);\n\n        onMounted(() => {\n            eventBus.on('accordion.toggle', closeAccordions);\n        });\n\n        onBeforeUnmount(() => {\n            eventBus.off('accordion.toggle');\n        });\n    },\n};\n</script>\n","<template>\n    <section\n        class=\"bv-accordion\"\n        :data-accordion-id=\"accordionId\"\n        :class=\"{'bv-accordion--without-toggle': !togglable, 'is-open': state}\"\n    >\n        <header class=\"bv-accordion__header\">\n            <div v-if=\"togglable\" class=\"bv-accordion__toggle\" @click=\"toggle\">\n                <template v-if=\"usesFontAwesome\">\n                    <span class=\"icon\"><i class=\"fas fal\" :class=\"[state ? 'fa-minus' : 'fa-plus']\"></i></span>\n                </template>\n                <template v-else>{{ state ? '-' : '+' }}</template>\n            </div>\n            <div class=\"bv-accordion__title\" @click=\"toggle\"><slot name=\"title\"></slot></div>\n            <div class=\"bv-accordion__actions\"><slot name=\"actions\"></slot></div>\n        </header>\n        <transition name=\"bv-accordion-toggle\" @enter=\"enter\" @after-enter=\"afterEnter\" @leave=\"leave\">\n            <article v-show=\"state\" class=\"bv-accordion__content content\">\n                <slot name=\"content\" v-bind:state=\"state\"></slot>\n            </article>\n        </transition>\n    </section>\n</template>\n\n<script>\nimport {ref, nextTick, onBeforeUnmount, watch, inject} from 'vue';\nimport {nanoid} from 'nanoid';\n\nimport eventBus from './bus.js';\n\nexport default {\n    name: 'bv-accordion',\n    props: {\n        usesFontAwesome: {\n            type: Boolean,\n            default: true,\n        },\n        togglable: {\n            type: Boolean,\n            default: true,\n        },\n        open: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    emits: ['toggle'],\n    setup(props, {emit}) {\n        const state = ref(props.open);\n        const accordionId = nanoid();\n        const registerChild = inject('registerChild', null);\n\n        const toggle = async () => {\n            if (!props.togglable) return;\n            await nextTick();\n\n            state.value = !state.value;\n            emit('toggle', state.value);\n            eventBus.emit('accordion.toggle', {accordionId, state: state.value});\n        };\n\n        const enter = async (element) => {\n            const width = getComputedStyle(element).width;\n\n            element.style.width = width;\n            element.style.position = 'absolute';\n            element.style.visibility = 'hidden';\n            element.style.height = 'auto';\n\n            const height = getComputedStyle(element).height;\n\n            element.style.width = null;\n            element.style.position = null;\n            element.style.visibility = null;\n            element.style.height = 0;\n\n            getComputedStyle(element).height;\n            await nextTick();\n            element.style.height = height;\n        };\n\n        const afterEnter = (element) => {\n            element.style.height = 'auto';\n        };\n\n        const leave = async (element) => {\n            const height = getComputedStyle(element).height;\n            element.style.height = height;\n\n            getComputedStyle(element).height;\n            await nextTick();\n            element.style.height = 0;\n        };\n\n        const close = (accordionsToClose) => {\n            if (!state.value || !props.togglable || !accordionsToClose.includes(accordionId)) return;\n            state.value = false;\n        };\n\n        eventBus.on('accordion.close', close);\n\n        if (registerChild) {\n            registerChild({id: accordionId, state: state.value});\n        }\n\n        onBeforeUnmount(() => eventBus.off('accordion.close'));\n\n        watch(\n            () => props.open,\n            (value) => {\n                if (value === state.value) return;\n                toggle();\n            }\n        );\n\n        return {accordionId, state, toggle, enter, afterEnter, leave};\n    },\n};\n</script>\n","import Accordions from './Accordions.vue';\nimport Accordion from './Accordion.vue';\nimport './assets/style.scss';\n\nexport default (app) => {\n    app.component('Accordion', Accordion);\n    app.component('Accordions', Accordions);\n};\n"],"names":["emitter","mitt","name","props","single","default","type","Boolean","setup","slots","children","registeredAccordions","length","dispatchCloseEvent","accordionId","accordionsToClose","reduce","carry","child","id","state","emit","closeAccordions","find","push","openAccordion","on","off","usesFontAwesome","togglable","open","emits","ref","nanoid","registerChild","inject","toggle","async","nextTick","value","includes","eventBus","enter","element","width","getComputedStyle","style","position","visibility","height","afterEnter","leave","key","class","onEnter","onAfterEnter","_hoisted_5","app","component","Accordion","Accordions"],"mappings":"oaAEA,MAAMA,EAAUC,OCQZC,KAAM,gBACNC,MAAO,CACHC,OAAQ,CACJC,SAAS,EACTC,KAAMC,UAGdC,MAAML,GAAOM,MAACA,UACJC,EAAW,GACXC,EAAuBF,EAAMJ,UAAU,GAAGK,SAASE,OAEnDC,EAAsBC,QACpBC,EAAoBL,EAASM,QAAO,CAACC,EAAOC,IACxCA,EAAMC,KAAOL,EAAoBG,KAC/BG,OAAQ,EACP,CAACF,EAAMC,MAAOF,KACtB,MAEMI,KAAK,kBAAmBN,IAG/BO,EAAkB,EAAER,YAAAA,EAAaM,MAAAA,MAC9BjB,EAAMC,QAAWgB,GACjBV,EAASa,MAAML,GAAUA,EAAMC,KAAOL,OAExBA,MAsBf,iBANeI,MACVM,KAAKN,GACVR,EAASE,SAAWD,GAfC,UACpBR,EAAMC,kBACPqB,EAAgB,eAETP,KAASR,WACEQ,EAAME,MAAQF,EAAMC,GAAK,MACvCM,QAGHA,KACcA,aAWb,OACGC,GAAG,mBAAoBJ,SAGpB,OACHK,IAAI,qIClCzB,SACIzB,KAAM,eACNC,MAAO,CACHyB,gBAAiB,CACbtB,KAAMC,QACNF,SAAS,GAEbwB,UAAW,CACPvB,KAAMC,QACNF,SAAS,GAEbyB,KAAM,CACFxB,KAAMC,QACNF,SAAS,IAGjB0B,MAAO,CAAC,UACRvB,MAAML,GAAOkB,KAACA,UACJD,EAAQY,EAAI7B,EAAM2B,MAClBhB,EAAcmB,IACdC,EAAgBC,EAAO,gBAAiB,MAExCC,EAASC,UACNlC,EAAM0B,kBACLS,MAEAC,OAASnB,EAAMmB,QAChB,SAAUnB,EAAMmB,SACZlB,KAAK,mBAAoB,CAACP,YAAAA,EAAaM,MAAOA,EAAMmB,mBAyCxDb,GAAG,mBALGX,IACNK,EAAMmB,OAAUpC,EAAM0B,WAAcd,EAAkByB,SAAS1B,OAC9DyB,OAAQ,MAKdL,KACc,CAACf,GAAIL,EAAaM,MAAOA,EAAMmB,WAGjC,IAAME,EAASd,IAAI,wBAG/B,IAAMxB,EAAM2B,OACXS,IACOA,IAAUnB,EAAMmB,cAKrB,CAACzB,YAAAA,EAAaM,MAAAA,EAAOgB,OAAAA,EAAQM,MAtDtBL,MAAOM,UACXC,EAAQC,iBAAiBF,GAASC,QAEhCE,MAAMF,MAAQA,IACdE,MAAMC,SAAW,aACjBD,MAAME,WAAa,WACnBF,MAAMG,OAAS,aAEjBA,EAASJ,iBAAiBF,GAASM,SAEjCH,MAAMF,MAAQ,OACdE,MAAMC,SAAW,OACjBD,MAAME,WAAa,OACnBF,MAAMG,OAAS,mBAENN,GAASM,aACpBX,MACEQ,MAAMG,OAASA,GAqCgBC,WAlCvBP,MACRG,MAAMG,OAAS,QAiC4BE,MA9BzCd,MAAOM,UACXM,EAASJ,iBAAiBF,GAASM,SACjCH,MAAMG,OAASA,mBAENN,GAASM,aACpBX,MACEQ,MAAMG,OAAS,kEAlFTG,IAAK,mBAQKC,MAAM,0HAdjCA,sKAIyBD,IAAK,EAAyBC,MAAK,8EACrC,qHAGSD,2DAEKC,MAAK,8IAGHnD,2BAAeoD,gBAA0BC,eAAYL,wCACzF,mBACuCM,EAAK,0HCdxCC,MACRC,UAAU,YAAaC,KACvBD,UAAU,aAAcE"}